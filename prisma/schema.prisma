// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Tutor {
  id             Int        @id @default(autoincrement())
  name           String
  email          String
  rate           Float
  commission     Float
  school         String
  program        String
  join_date      DateTime
  balance        Float      @default(0.0)
  bio            String
  hours_taught   Float
  last_login     DateTime
  profile_picture String
  active         Boolean
  reviews        Review[]
  tutorStudents  TutorStudent[]
  tutorSubjects  TutorSubject[]
}

model Review {
  id          Int      @id @default(autoincrement())
  student_id  Int
  tutor_id    Int
  description String
  stars       Int
  student     Student  @relation(fields: [student_id], references: [id])
  tutor       Tutor    @relation(fields: [tutor_id], references: [id])
}

model Student {
  id             Int       @id @default(autoincrement())
  name           String
  email          String
  school         String
  grade          Int
  join_date      DateTime
  parent_id      Int
  balance        Float     @default(0.0)
  last_login     DateTime
  profile_picture String
  active         Boolean
  reviews        Review[]
  tutorStudents  TutorStudent[]
  parent         Parent    @relation(fields: [parent_id], references: [id])
}

model Parent {
  id          Int       @id @default(autoincrement())
  name        String
  email       String
  balance     Float     @default(0.0)
  last_login  DateTime
  active      Boolean
  students    Student[]
}

model TutorStudent {
  student_id Int
  tutor_id   Int
  student    Student @relation(fields: [student_id], references: [id])
  tutor      Tutor   @relation(fields: [tutor_id], references: [id])
  @@id([student_id, tutor_id])
}

model Subject {
  id      Int    @id @default(autoincrement())
  name    String
  grade   Int
  tutorSubjects TutorSubject[]
}

model TutorSubject {
  tutor_id   Int
  subject_id Int
  tutor      Tutor   @relation(fields: [tutor_id], references: [id])
  subject    Subject @relation(fields: [subject_id], references: [id])
  @@id([tutor_id, subject_id])
}
